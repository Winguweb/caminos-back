@mixin map-references {
  height: 100%;

  > div:first-of-type {
    border-radius: 8px;
    height: 100%;
    min-height: 400px;
    overflow: hidden;
  }

  .leaflet-tile-pane {
    opacity: 0.6;
  }

  .leaflet-shadow-pane {
    opacity: 0.2;
  }

  .leaflet-marker-icon {
    background-color: transparent;
    border: none;
  }

  .geometry-marker,
  .geometry-polygon,
  .geometry-polyline {
    &.home {
      stroke: $home;
    }

    &.water {
      stroke: $water;
    }

    &.trash {
      stroke: $trash;
    }

    &.public {
      stroke: $public;
    }

    &.health {
      stroke: $health;
    }

    &.energy {
      stroke: $energy;
    }

    &.sewer {
      stroke: $sewer;
    }

    &.infrastructure {
      stroke: $infrastructure;
    }
  }

  .geometry-polygon {
    &.home {
      fill: $home;
    }

    &.water {
      fill: $water;
    }

    &.trash {
      fill: $trash;
    }

    &.public {
      fill: $public;
    }

    &.health {
      fill: $health;
    }

    &.energy {
      fill: $energy;
    }

    &.sewer {
      fill: $sewer;
    }

    &.infrastructure {
      fill: $infrastructure;
    }

    &.base-geometry {
      fill: transparent;
      stroke: color($red-covid, 0.7);
      stroke-dasharray: 5 2;
      stroke-width: 1px;
    }
  }

  p.marker-name {
    border-radius: 2px;
    box-shadow: 8px 0 4px -4px color($light-shadow, 0.1);
    left: 50%;
    line-height: 24px;
    padding: ($vgutter / 4) ($gutter / 2);
    position: absolute;
    top: calc(#{$gutter * 2} - #{$border});
    transform: translate3d(-50%, $gutter, 0);
    white-space: nowrap;

    @include background-color($white, 0.65);

    @include type-setting(-1);

    &.unurbanized {
      display: none;
      left: calc(50% + 4px);
      top: calc(#{$gutter * 1.5} - #{$border});
    }
  }

  p.reference-marker {
    border: $border solid $red-covid;
    border-radius: 100%;
    box-sizing: content-box;
    display: inline-block;
    font-family: $font-sans;
    height: $outer-diameter;
    margin: 0;
    position: absolute;
    vertical-align: middle;
    width: $outer-diameter;

    &::before {
      background-color: $red-covid;
      border-radius: 100%;
      content: '';
      display: block;
      height: $inner-diameter;
      left: #{($outer-diameter - $inner-diameter) / 2};
      position: relative;
      top: #{($outer-diameter - $inner-diameter) / 2};
      width: $inner-diameter;
    }

    > span {
      @include text-color($white, 1);

      font-size: 13px;
      font-weight: bold;
      left: 50%;
      position: absolute;
      text-transform: uppercase;
      top: 50%;
      transform: translate3d(-50%, -50%, 0);
    }

    &.unurbanized {
      border: none;
      height: $small-outer-diameter;
      width: $small-outer-diameter;

      &::before {
        background-color: transparent;
        border: 2px solid color($red-covid);
        height: 100%;
        left: 0;
        top: 0;
        width: 100%;
      }

      > span {
        display: none;
      }
    }
  }

  .map-reference-popup {
    background-color: $white;
    border-radius: 2px;
    box-shadow: 0 11px 15px -7px rgba(0, 0, 0, 0.2), 0 24px 38px 3px rgba(0, 0, 0, 0.14), 0 9px 46px 8px rgba(0, 0, 0, 0.12);
    display: none;
    max-width: 350px;
    min-width: 235px;
    padding: $gutter;
    position: absolute;
    transform: translate3d(30px, -50%, 0);

    &.align-left {
      transform: translate3d(calc(-100% - 30px), -50%, 0);

      &:before {
        border-color: transparent transparent transparent $white;
        border-width: 5px 0 5px 4px;
        left: auto;
        right: 0;
        transform: translate3d(100%, -50%, 0);
      }
    }

    > p {
      line-height: 1em;
      margin-bottom: $gutter;
      margin-right: $gutter / 2;
    }

    > span {
      &.status-urbanized {
        @include wired-label($urbanization-in-process);
      }

      &.status-unurbanized {
        @include wired-label($urbanization-pending);
      }

      display: inline-block;
      margin-bottom: $gutter;
    }

    > div:first-of-type {
      clear: both;

      > a {
        @include small-button;

        display: block;
        margin-bottom: $gutter;
      }
    }

    > div:last-of-type {
      clear: both;
      float: right;

      > a {
        @include small-text-button;

        background: color($red-covid, 0.1);

        @include type-setting(-3);

        & + a {
          margin-left: $gutter / 2;
        }
      }
    }

    &:before {
      border-color: transparent $white transparent transparent;
      border-style: solid;
      border-width: 5px 4px 5px 0;
      content: '';
      display: block;
      height: 0;
      left: 0;
      position: absolute;
      top: 50%;
      transform: translate3d(-100%, -50%, 0);
      width: 0;
    }

    &.visible,
    &:hover {
      display: block;
    }
  }
}

.map-references-cell {
  @include map-references;
}
